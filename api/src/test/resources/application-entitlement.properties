#
# /*
#  *
#  * ******************************************************************************
#  *
#  *  Copyright (c) 2023-24 Harman International
#  *
#  *
#  *
#  *  Licensed under the Apache License, Version 2.0 (the "License");
#  *
#  *  you may not use this file except in compliance with the License.
#  *
#  *  You may obtain a copy of the License at
#  *
#  *
#  *
#  *  http://www.apache.org/licenses/LICENSE-2.0
#  *
#  **
#  *  Unless required by applicable law or agreed to in writing, software
#  *
#  *  distributed under the License is distributed on an "AS IS" BASIS,
#  *
#  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  *
#  *  See the License for the specific language governing permissions and
#  *
#  *  limitations under the License.
#  *
#  *
#  *
#  *  SPDX-License-Identifier: Apache-2.0
#  *
#  *  *******************************************************************************
#  *
#  */
#

service.name=notification-api
#CORS Properties
cors.origin.allow=*
#Spring mongo properties
mongodb.host=localhost
mongodb.port=27017
mongodb.username=admin
mongodb.password=dummyPass
mongodb.auth.db=admin
mongodb.name=admin
mongodb.pool.max.size=200
mongodb.max.wait.time.ms=60000
mongodb.connection.timeout.ms=60000
mongodb.socket.timeout.ms=60000
mongodb.max.connections.per.host=200
mongodb.block.threads.allowed.multiplier=10
mongodb.read.preference=secondaryPreferred
morphia.map.packages=org.eclipse.ecsp
mongodb.server.selection.timeout=30000
mongodb.taggable.read.preference.enabled=false
mongodb.read.preference.tag="primary_region"
mongodb.vault.enabled=false
metrics.enabled=false
#Schedule time delay is in milli secs
mongodb.vault.refreshCheckInterval=300000
mongodb.vault.leaseIntervalGap=300000
#Vault Configuration
vault.enabled=false
#secrets.vault.enabled=true
spring.profiles.active=entitlement
vault.server.ipaddress=10.0.0.66
vault.environment=dev
vault.server.port.number=8200
vault.secret.folder=api-common
kafka.sink.topic=test
#Kafka details
kafka.acks=all
kafka.batch.size=0
kafka.linger.ms=0
kafka.key.serializer=org.apache.kafka.common.serialization.ByteArraySerializer
kafka.value.serializer=org.apache.kafka.common.serialization.ByteArraySerializer
kafka.key.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
kafka.value.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
kafka.buffer.memory=524288
kafka.broker.url=127.0.0.1:9092
#performance monitoring
performance.monitoring.enabled=true
# redis properties
# We have to declare redis properties here as it is getting eagerly loaded as part of the 'ignite-cache' dependency
# TODO: Load redis server lazily so that it will be initialized only if needed and we do not have to
# specify redis properties here as long as we don't need redis server functionality
redis.address=127.0.0.1:6379
redis.sentinels=
redis.master.name=
redis.dns.monitoring.interval=5000
redis.read.mode=SLAVE
redis.subscription.mode=SLAVE
redis.subscription.conn.min.idle.size=1 
redis.subscription.conn.pool.size=50
redis.slave.conn.min.idle.size=32
redis.slave.pool.size=64
redis.master.conn.min.idle.size=32
redis.master.conn.pool.size=64
redis.idle.conn.timeout=10000
redis.conn.timeout=10000
redis.timeout=3000
redis.retry.attempts=3
redis.retry.interval=1500
redis.reconnection.timeout=3000
redis.failed.attempts=3
redis.database=0
redis.password=
redis.subscriptions.per.conn=5
redis.client.name=yellow
redis.conn.min.idle.size=32
redis.conn.pool.size=64
redis.cluster.masters=
redis.scan.interval=1000
#Kafka producer enabler config
kafka.producer.service.enabled=true
##Redis properties
redis.mode=SINGLE
#redis.mode=SENTINEL
redis.single.endpoint=127.0.0.1:6379
redis.sentinel.endpoints=127.0.0.1:26379,127.0.0.1:26380,127.0.0.1:26381
redis.master.pool.max.size=5
redis.master.idle.min=1
redis.slave.pool.max.size=5
redis.slave.idle.min=1
redis.max.pool.size=5
redis.min.idle=1
redis.read.timeout=10000
device.association.base.url=http://internal-core-assn-elb-761652287.us-east-1.elb.amazonaws.com/vehicle-association-service
device.association.base.url.version=v1
enable.ignite.notification.history=true
#used in ignite-security
cloud.service.provider=aws
ignite.kmsArn=arn:aws:kms:us-east-1:*****:key/*******&*
spring.main.allow-bean-definition-overriding=true
http.vp.url=http://localhost:8080/v1.0/vehicleProfiles/
http.vehicles.url=http://localhost:8080/v1.0/vehicles
path.for.getting.services=$.ecus.['hu','xyz'].provisionedServices.services[*].serviceId
enable.entitlement.validation=true