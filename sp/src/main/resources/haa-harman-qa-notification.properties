#
# /*
#  *
#  * ******************************************************************************
#  *
#  *  Copyright (c) 2023-24 Harman International
#  *
#  *
#  *
#  *  Licensed under the Apache License, Version 2.0 (the "License");
#  *
#  *  you may not use this file except in compliance with the License.
#  *
#  *  You may obtain a copy of the License at
#  *
#  *
#  *
#  *  http://www.apache.org/licenses/LICENSE-2.0
#  *
#  **
#  *  Unless required by applicable law or agreed to in writing, software
#  *
#  *  distributed under the License is distributed on an "AS IS" BASIS,
#  *
#  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  *
#  *  See the License for the specific language governing permissions and
#  *
#  *  limitations under the License.
#  *
#  *
#  *
#  *  SPDX-License-Identifier: Apache-2.0
#  *
#  *  *******************************************************************************
#  *
#  */
#

aws.region=US_EAST_1
aws.sns.endpoint.name=https://sns.us-east-1.amazonaws.com
aws.sns.topic.arn.prefix=arn:aws:sns:us-east-1:318528952126:
aws.sns.push.app.name=saas_notification_app_1
aws.sns.ios.push.platform.name=APNS
aws.sns.push.cert.key.filename=notification_ack_harman_prod1
aws.sns.push.private.key.filename=notification_apk_harman_prod1
device.token.collection.name=haa-harman-qa-notnTokenUserMap
##making smaller property names as systemd supports only certain length and we are already reaching
android.apikey.filename=android_api_key
#How long (in seconds) the message should be kept on GCM storage if the device is offline. 
#Optional (default time-to-live is 4 weeks, and must be set as a JSON number). 
time_to_live=2419200
#alert and notification collection names
accident.records.colln.name=haa-harman-qa-accidentrecords
#DynamoDB properties
dynamodb.service.endpoint=dynamodb.us-east-1.amazonaws.com
dynamodb.region=us-east-1
kinesis.region=us-east-1
##Redis properties
redis.mode=CLUSTER
redis.single.endpoint=ignite-ecs-node.vwc1ee.0001.use1.cache.amazonaws.com:6379
redis.replica.endpoints=san-stage-dev-st-001.vwc1ee.0001.use1.cache.amazonaws.com:6379,san-stage-dev-st-002.vwc1ee.0001.use1.cache.amazonaws.com:6379
redis.cluster.endpoints=haa-harman-qa-ca.tw7wyw.clustercfg.use1.cache.amazonaws.com:6379
redis.master.name=mymaster
redis.master.pool.max.size=5
redis.master.idle.min=1
redis.slave.pool.max.size=5
redis.slave.idle.min=1
redis.scan.interval=2000
#In cluster mode, it doesnt matter to give the database number
redis.database=0
redis.ttl.in.seconds=120
redis.max.pool.size=5
redis.min.idle=1
# Kinesis stream names /  equivalent to kafka topic names
source.internal.topic.name=haa-harman-qa-internal
source.publish.topic.name=haa-harman-qa-post-alerts
#Dynamo tables
notification.settings.colln.name=haa-harman-qa-notificationSetUp
alerts.colln.name=haa-harman-qa-alerts
notification.config.colln.name=haa-harman-qa-notifConfig
#Streaming properties
discovery.impl.class.fqn=org.eclipse.ecsp.stream.base.discovery.SPIDiscoveryServiceImpl
launcher.impl.class.fqn=org.eclipse.ecsp.aws.lambda.base.AwsLambdaLauncher
#Outputting the base metrics of stream processor as well
metric.reporters=org.eclipse.ecsp.stream.base.metrics.reporter.ConsoleMetricReporter
metrics.sample.window.ms=60000
metrics.num.samples=15000
#Below metrics are app specific and uses dropwizard metrics
#Metric for reporting number of geofence events that are pushed
metrics.geofence.count.enable=true
#Metric for reporing total number of DTC alerts sents
metrics.dtc.count.enable=true
#Metric for reporting  total number of low fuel alerts sent
metrics.lowfuel.count.enable=true
#Metric for reporting number of SMS sent
metrics.sms.count.enable=true
#Metric for reporting number of over speed sent
metrics.overspeed.count.enable=true
#Metric for reporting number of curfew event sent
metrics.curfew.count.enable=true
#Metric for reporting number of idling event sent
metrics.idling.count.enable=true
#Metric for reporting number of tow event sent
metrics.tow.count.enable=true
#Metric for reporting number of dongle detach event sent
metrics.dongle.count.enable=true
#alerts msg fetcher class
vehicle.notification.dtc.msg.fetcher.class=org.eclipse.ecsp.notification.db.client.DynamoDbClient
#DAO class used by other alerts msg fetcher
vehicle.notification.other.alerts.msg.fetcher.class=org.eclipse.ecsp.notification.db.client.ResourceBundleClient
#DAO class used by notification
vehicle.notification.dao.class=org.eclipse.ecsp.notification.db.client.DynamoDbClient
resource.bundle.collection.name=AlertMsgResourceBundle
dtc.collection.name=haa-harman-qa-dTCMaster
##Alert duplication properties
dedup.alerts=true
alert.deduplicator.key.store=org.eclipse.ecsp.notification.key.store.RedisStore
alert.deduplicator.key.store.ttl.in.seconds=120
#We will move to DynamoDB key store when it's ready for bounce handler
aws.ses.bounce.handler.key.store=org.eclipse.ecsp.notification.key.store.RedisStore
aws.ses.bounce.handler.enable=true
aws.ses.bounce.queue=haa-harman-qa-ses-bounce
#Less than 0 implies persist forever
aws.ses.bounce.handler.key.store.ttl.in.seconds=-1
#Campaign cache store and TTL in cache
campaign.key.store=org.eclipse.ecsp.notification.key.store.RedisStore
campaign.key.store.ttl.in.seconds=86400
#property to specify whether the app is executed on lambda or on some other environment
vehicle.notification.aws.lambda.execution=true
#keep the mapping of the primarykey for a dynamoDB table name
#See kafka-mongodb-connect.json
#specify pk mapping as id or default and the corresponding method as set or push and update property. If mapping is default, then you need to give column name for Key 
#if pk mapping is id, then what ever the key is coming that will be primary key and if it is default then UUID will be generated
dynamodb.pk.mapping.haa-harman-qa-notificationSetUp=id:set:na
dynamodb.pk.mapping.haa-harman-qa-alerts=default:set:na:pdId
dynamodb.pk.mapping.haa-harman-qa-notifConfig=id:set:na
push.impl.class=org.eclipse.ecsp.notification.aws.sns.AmazonSNSPushNotifier
sms.impl.class=org.eclipse.ecsp.notification.aws.sns.AmazonSNSSMSNotifier
#email.impl.class=org.eclipse.ecsp.notification.email.SmtpEmailNotifier
email.impl.class=org.eclipse.ecsp.notification.aws.ses.AmazonSesNotifier
browser.impl.class=org.eclipse.ecsp.notification.browser.MqttBrowserNotifier
email.from=no-reply@ahanet.net
email.subject=alert from aha
email.smtp.host=email-smtp.us-east-1.amazonaws.com
email.smtp.user=***************
email.smtp.password=**
#mqtt properties
mqtt.broker.url=ssl://andromeda-mqtt-ext-elb-1432036051.us-east-1.elb.amazonaws.com:8883
mqtt.topic.separator=/
mqtt.topic.namespace=haa
mqtt.topic.tenant=harman
mqtt.topic.env=qa
mqtt.device.max.connections=10
mqtt.config.qos=2
mqtt.user.name=harman/qa/haa_api
mqtt.user.password=*******************
#Currently app is not sending notif config for browser, enabling by default for all users
#Make this false once app starts sending browser config also
browser.enable.default=true
#Cumulative Logging
log.counts=true
log.counts.minutes=5
wso2.tenant.suffix=@carbon.super
dynamo.retry.count=100